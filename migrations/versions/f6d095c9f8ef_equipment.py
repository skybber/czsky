"""Equipment

Revision ID: f6d095c9f8ef
Revises: 2bbf462e78e2
Create Date: 2021-12-29 20:17:58.226211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f6d095c9f8ef'
down_revision = '2bbf462e78e2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('eyepieces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('descr', sa.Text(), nullable=True),
    sa.Column('focal_length_mm', sa.Float(), nullable=False),
    sa.Column('fov_deg', sa.Integer(), nullable=False),
    sa.Column('diameter_inch', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['users.id'], name=op.f('fk_eyepieces_create_by_users')),
    sa.ForeignKeyConstraint(['update_by'], ['users.id'], name=op.f('fk_eyepieces_update_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_eyepieces_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_eyepieces'))
    )
    with op.batch_alter_table('eyepieces', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_eyepieces_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_eyepieces_user_id'), ['user_id'], unique=False)

    op.create_table('filters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('descr', sa.Text(), nullable=True),
    sa.Column('filter_type', sa.Enum('UHC', 'OIII', 'CLS', 'HBETA', 'OTHER', name='filtertype'), nullable=True),
    sa.Column('diameter_inch', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['users.id'], name=op.f('fk_filters_create_by_users')),
    sa.ForeignKeyConstraint(['update_by'], ['users.id'], name=op.f('fk_filters_update_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_filters_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_filters'))
    )
    with op.batch_alter_table('filters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_filters_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_filters_user_id'), ['user_id'], unique=False)

    op.create_table('telescopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('descr', sa.Text(), nullable=True),
    sa.Column('telescope_type', sa.Enum('REFRACTOR', 'REFLECTOR', 'OTHER', name='telescopetype'), nullable=True),
    sa.Column('aperture_mm', sa.Integer(), nullable=True),
    sa.Column('focal_length_mm', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['users.id'], name=op.f('fk_telescopes_create_by_users')),
    sa.ForeignKeyConstraint(['update_by'], ['users.id'], name=op.f('fk_telescopes_update_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_telescopes_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_telescopes'))
    )
    with op.batch_alter_table('telescopes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_telescopes_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_telescopes_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('telescopes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_telescopes_user_id'))
        batch_op.drop_index(batch_op.f('ix_telescopes_name'))

    op.drop_table('telescopes')
    with op.batch_alter_table('filters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_filters_user_id'))
        batch_op.drop_index(batch_op.f('ix_filters_name'))

    op.drop_table('filters')
    with op.batch_alter_table('eyepieces', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_eyepieces_user_id'))
        batch_op.drop_index(batch_op.f('ix_eyepieces_name'))

    op.drop_table('eyepieces')
    # ### end Alembic commands ###
